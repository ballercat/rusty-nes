#[allow(dead_code)]
pub const ADC: u8 = 0x69;
#[allow(dead_code)]
pub const BCC: u8 = 0x90;
#[allow(dead_code)]
pub const BCS: u8 = 0xb0;
#[allow(dead_code)]
pub const BEQ: u8 = 0xf0;
#[allow(dead_code)]
pub const BIT_Z: u8 = 0x24;
#[allow(dead_code)]
pub const BIT_A: u8 = 0x2c;
#[allow(dead_code)]
pub const BMI: u8 = 0x30;
#[allow(dead_code)]
pub const BNE: u8 = 0xd0;
#[allow(dead_code)]
pub const BPL: u8 = 0x10;
#[allow(dead_code)]
pub const CLC: u8 = 0x18;
#[allow(dead_code)]
pub const SEC: u8 = 0x38;
#[allow(dead_code)]
pub const NOP: u8 = 0xea;
#[allow(dead_code)]
pub const LDA: u8 = 0xa9;

const INSTRUCTION_STRINGS: &[&str] = &[
//           0:8    1:9    2:a    3:b    4:c    5:d    6:e    7:f
/* 0x00 */  "BRK", "---", "---", "---", "---", "---", "---", "---",
/* 0x08 */  "PHP", "---", "---", "---", "---", "---", "---", "---",
/* 0x10 */  "BPL", "---", "---", "---", "---", "---", "---", "---",
/* 0x18 */  "CLC", "---", "---", "---", "---", "---", "---", "---",
/* 0x20 */  "JSR", "---", "---", "---", "---", "---", "---", "---",
/* 0x28 */  "PLP", "---", "---", "---", "BIT", "---", "---", "---",
/* 0x30 */  "BMI", "---", "---", "---", "---", "---", "---", "---",
/* 0x38 */  "SEC", "---", "---", "---", "---", "---", "---", "---",
/* 0x40 */  "RTI", "---", "---", "---", "---", "---", "---", "---",
/* 0x48 */  "PHA", "---", "---", "---", "JMP", "---", "---", "---",
/* 0x50 */  "BVC", "---", "---", "---", "---", "---", "---", "---",
/* 0x58 */  "CLI", "---", "---", "---", "---", "---", "---", "---",
/* 0x60 */  "---", "---", "---", "---", "---", "---", "---", "---",
/* 0x68 */  "---", "---", "---", "---", "---", "---", "---", "---",
/* 0x70 */  "---", "---", "---", "---", "---", "---", "---", "---",
/* 0x78 */  "---", "---", "---", "---", "---", "---", "---", "---",
/* 0x80 */  "---", "---", "---", "---", "STY", "---", "---", "---",
/* 0x88 */  "---", "---", "---", "---", "---", "---", "---", "---",
/* 0x90 */  "---", "---", "---", "---", "---", "---", "---", "---",
/* 0x98 */  "---", "---", "---", "---", "---", "---", "---", "---",
/* 0xa0 */  "---", "---", "---", "---", "---", "---", "---", "---",
/* 0xa8 */  "---", "---", "---", "---", "---", "---", "---", "---",
/* 0xb0 */  "---", "---", "---", "---", "---", "---", "---", "---",
/* 0xb8 */  "---", "---", "---", "---", "---", "---", "---", "---",
/* 0xc0 */  "---", "---", "---", "---", "---", "---", "---", "---",
/* 0xc8 */  "---", "---", "---", "---", "---", "---", "---", "---",
/* 0xd0 */  "---", "---", "---", "---", "---", "---", "---", "---",
/* 0xd8 */  "---", "---", "---", "---", "---", "---", "---", "---",
/* 0xe0 */  "---", "---", "---", "---", "---", "---", "---", "---",
/* 0xe8 */  "---", "---", "NOP", "---", "---", "---", "---", "---",
/* 0xf0 */  "---", "---", "---", "---", "---", "---", "---", "---",
/* 0xf8 */  "---", "---", "---", "---", "---", "---", "---", "---",
]

pub fn parse_asm() -> Vec<u8> {
}
